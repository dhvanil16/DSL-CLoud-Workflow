/**
 * generated by Xtext 2.32.0
 */
package cloudautomation.airflow.impl;

import cloudautomation.airflow.AirflowPackage;
import cloudautomation.airflow.Priority;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Priority</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link cloudautomation.airflow.impl.PriorityImpl#getLOW <em>LOW</em>}</li>
 *   <li>{@link cloudautomation.airflow.impl.PriorityImpl#getMEDIUM <em>MEDIUM</em>}</li>
 *   <li>{@link cloudautomation.airflow.impl.PriorityImpl#getHIGH <em>HIGH</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PriorityImpl extends MinimalEObjectImpl.Container implements Priority
{
  /**
   * The default value of the '{@link #getLOW() <em>LOW</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLOW()
   * @generated
   * @ordered
   */
  protected static final String LOW_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getLOW() <em>LOW</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLOW()
   * @generated
   * @ordered
   */
  protected String low = LOW_EDEFAULT;

  /**
   * The default value of the '{@link #getMEDIUM() <em>MEDIUM</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMEDIUM()
   * @generated
   * @ordered
   */
  protected static final String MEDIUM_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMEDIUM() <em>MEDIUM</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMEDIUM()
   * @generated
   * @ordered
   */
  protected String medium = MEDIUM_EDEFAULT;

  /**
   * The default value of the '{@link #getHIGH() <em>HIGH</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHIGH()
   * @generated
   * @ordered
   */
  protected static final String HIGH_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getHIGH() <em>HIGH</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHIGH()
   * @generated
   * @ordered
   */
  protected String high = HIGH_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PriorityImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AirflowPackage.Literals.PRIORITY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLOW()
  {
    return low;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLOW(String newLOW)
  {
    String oldLOW = low;
    low = newLOW;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AirflowPackage.PRIORITY__LOW, oldLOW, low));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getMEDIUM()
  {
    return medium;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMEDIUM(String newMEDIUM)
  {
    String oldMEDIUM = medium;
    medium = newMEDIUM;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AirflowPackage.PRIORITY__MEDIUM, oldMEDIUM, medium));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getHIGH()
  {
    return high;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setHIGH(String newHIGH)
  {
    String oldHIGH = high;
    high = newHIGH;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AirflowPackage.PRIORITY__HIGH, oldHIGH, high));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AirflowPackage.PRIORITY__LOW:
        return getLOW();
      case AirflowPackage.PRIORITY__MEDIUM:
        return getMEDIUM();
      case AirflowPackage.PRIORITY__HIGH:
        return getHIGH();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AirflowPackage.PRIORITY__LOW:
        setLOW((String)newValue);
        return;
      case AirflowPackage.PRIORITY__MEDIUM:
        setMEDIUM((String)newValue);
        return;
      case AirflowPackage.PRIORITY__HIGH:
        setHIGH((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AirflowPackage.PRIORITY__LOW:
        setLOW(LOW_EDEFAULT);
        return;
      case AirflowPackage.PRIORITY__MEDIUM:
        setMEDIUM(MEDIUM_EDEFAULT);
        return;
      case AirflowPackage.PRIORITY__HIGH:
        setHIGH(HIGH_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AirflowPackage.PRIORITY__LOW:
        return LOW_EDEFAULT == null ? low != null : !LOW_EDEFAULT.equals(low);
      case AirflowPackage.PRIORITY__MEDIUM:
        return MEDIUM_EDEFAULT == null ? medium != null : !MEDIUM_EDEFAULT.equals(medium);
      case AirflowPackage.PRIORITY__HIGH:
        return HIGH_EDEFAULT == null ? high != null : !HIGH_EDEFAULT.equals(high);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (LOW: ");
    result.append(low);
    result.append(", MEDIUM: ");
    result.append(medium);
    result.append(", HIGH: ");
    result.append(high);
    result.append(')');
    return result.toString();
  }

} //PriorityImpl
